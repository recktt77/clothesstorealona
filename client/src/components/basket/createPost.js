import React, { useEffect, useState } from "react";
import { addPost } from "../../api";
import "./CreatePost.css"; 

const CreatePost = ({ onPostCreated }) => {
    const [title, setTitle] = useState("");
    const [link, setLink] = useState("");
    const [body, setBody] = useState("");
    const [isSubmitting, setIsSubmitting] = useState(false);


    const handleSubmit = async (e) => {
        e.preventDefault();

        const userEmail = localStorage.getItem("userEmail");
        if (!userEmail) {
            alert("–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç!");
            return;
        }

        if (!title.trim() || !link.trim() || !body.trim()) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
            return;
        }

        setIsSubmitting(true);
        try {
            const newPost = await addPost({ userEmail, title, link, body, likes: 0 });
            alert("‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
            setTitle("");
            setLink("");
            setBody("");
            onPostCreated(newPost);
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞:", error);
            alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç.");
        }
        setIsSubmitting(false);
    };

    return (
        <div className="create-post-container">
            <form onSubmit={handleSubmit} className="create-post-form">
                <input
                    type="text"
                    placeholder="Title"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                    className="input-field"
                    required
                />
                <input
                    type="text"
                    placeholder="Link to image"
                    value={link}
                    onChange={(e) => setLink(e.target.value)}
                    className="input-field"
                    required
                />
                <textarea
                    placeholder="description"
                    value={body}
                    onChange={(e) => setBody(e.target.value)}
                    className="input-field textarea"
                    required
                />
                <button type="submit" className="submit-button" disabled={isSubmitting}>
                    {isSubmitting ? "‚è≥ posting..." : "üì¢ Post"}
                </button>
            </form>
        </div>
    );
};

export default CreatePost;
